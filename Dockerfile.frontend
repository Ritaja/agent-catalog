# Frontend Dockerfile
FROM node:18-alpine as base

WORKDIR /app

# Copy package files first for better caching
COPY frontend/package*.json ./
COPY frontend/yarn.lock* ./

# Install dependencies
RUN npm install

# Copy source code
COPY frontend/ .

# Development stage
FROM base as development
EXPOSE 3000
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "3000"]

# Build stage
FROM base as build-stage
RUN npm run build

# Production stage
FROM nginx:alpine as production

# Copy build files to nginx
COPY --from=build-stage /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

# Default to production
FROM production
